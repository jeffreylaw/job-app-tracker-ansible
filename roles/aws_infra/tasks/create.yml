- name: Create VPC
  ec2_vpc_net:
    name: AUTO_VPC
    cidr_block: "{{ vpc_cidr }}"
  register: vpc_result

- name: Create internet gateway
  ec2_vpc_igw:
    vpc_id: "{{ vpc_result.vpc.id }}"
    tags:
      Name: AUTO_IGW
  register: igw_result

- name: Create frontend subnet
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ frontend_subnet_cidr }}"
    az: "{{ frontend_subnet_az }}"
    tags:
      Name: AUTO_FRONTEND_SUBNET
  register: frontend_subnet_result

- name: Create backend subnet
  ec2_vpc_subnet:
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ backend_subnet_cidr }}"
    az: "{{ backend_subnet_az }}"
    tags:
      Name: AUTO_BACKEND_SUBNET
  register: backend_subnet_result

- name: Create subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_result.vpc.id }}"
    subnets:
      - "{{ frontend_subnet_result.subnet.id }}"
      - "{{ backend_subnet_result.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_result.gateway_id }}"
    tags:
      Name: AUTO_ROUTE_TBL
  register: route_tbl_result

- name: Create security group for frontend
  ec2_group:
    vpc_id: "{{ vpc_result.vpc.id }}"
    name: AUTO_FRONTEND_SG
    description: SG for frontend generated by Ansible
    rules:
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow all incoming http traffic on port 80
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow all incoming ssh traffic on port 22
  register: frontend_sg_result

- name: Create security group for backend
  ec2_group:
    vpc_id: "{{ vpc_result.vpc.id }}"
    name: AUTO_BACKEND_SG
    description: SG for backend generated by Ansible
    rules:
      - proto: tcp
        ports:
          - 8080
        group_id: "{{ frontend_sg_result.group_id }}"
        rule_desc: Allow traffic from frontend sg on port 8080
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow all incoming ssh traffic on port 22 for debugging
  register: backend_sg_result

- name: Create EC2 frontend instance
  ec2_instance:
    vpc_subnet_id: "{{ frontend_subnet_result.subnet.id }}"
    instance_type: "{{ app_instance_type }}"
    image_id: "{{ ami_id }}"
    security_group: "{{ frontend_sg_result.group_id }}"
    network:
      assign_public_ip: true
    key_name: "{{ ssh_key_name }}"
    name: AUTO_EC2_FRONTEND
    state: started
  register: ec2_frontend_result

- name: Create EC2 backend instance
  ec2_instance:
    vpc_subnet_id: "{{ backend_subnet_result.subnet.id }}"
    instance_type: "{{ app_instance_type }}"
    image_id: "{{ ami_id }}"
    security_group: "{{ backend_sg_result.group_id }}"
    network:
      assign_public_ip: true
    key_name: "{{ ssh_key_name }}"
    name: AUTO_EC2_BACKEND
    state: started
  register: ec2_backend_result

- name: EC2 frontend instance info
  ec2_instance_info:
    instance_ids:
      - "{{ ec2_frontend_result.instance_ids[0] }}"
  when: ec2_frontend_result is defined
  register: ec2_frontend_info

- name: EC2 backend instance info
  ec2_instance_info:
    instance_ids:
      - "{{ ec2_backend_result.instance_ids[0] }}"
  when: ec2_backend_result is defined
  register: ec2_backend_info

- meta: refresh_inventory
  
- name: Display EC2 instance public IP address
  debug:
    msg:
      - "{{ ec2_frontend_info.instances[0].public_ip_address }}"
      - "{{ ec2_backend_info.instances[0].public_ip_address }}"
    
